---
import Accordion from 'components/Accordion.astro';
import AccordionItem from 'components/AccordionItem.astro';
import Link from 'components/Link.astro';
import BaseLayout from 'layouts/BaseLayout.astro';
import SectionLayout from 'layouts/SectionLayout.astro';
import { getPages } from 'lib/sanity';

const pages = await getPages();
---

<BaseLayout>
  <SectionLayout color="var(--kodio-yellow)">
    <Accordion>
      <AccordionItem header="First item">
        <p>Paragraph</p>
        <Link href="/">Link</Link>
      </AccordionItem>
      <AccordionItem header="Second item">
        <p>Paragraph</p>
        <Link href="/">Link</Link>
      </AccordionItem>
      <AccordionItem header="Color palette">
        <h4>Click to change background color</h4>
        <div class="color-palette">
          <button class="yellow"></button>
          <button class="dark"></button>
          <button class="purple"></button>
          <button class="orange"></button>
        </div>
      </AccordionItem>
    </Accordion>
  </SectionLayout>
  <SectionLayout color="var(--white)">
    <Accordion>
      <AccordionItem header="First item">
        <p>Paragraph</p>
        <Link href="/">Link</Link>
      </AccordionItem>
      <AccordionItem header="Second item">
        <p>Paragraph</p>
        <Link href="/">Link</Link>
      </AccordionItem>
    </Accordion>
  </SectionLayout>
  <SectionLayout color="var(--kodio-purple)">
    <ul>
      {
        pages?.map(({ title, slug }) => (
          <li>
            <Link href={`/${slug.current}`}>{title}</Link>
          </li>
        ))
      }
    </ul>
  </SectionLayout>
</BaseLayout>

<style lang="scss">
  .color-palette {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;

    @media (min-width: $width-m) {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }
  }

  .color-palette > button {
    aspect-ratio: 1;
    border: 1px solid var(--white);
    cursor: pointer;
  }

  h4 {
    margin-bottom: 1rem;
  }

  .yellow {
    background-color: var(--kodio-yellow);
  }

  .dark {
    background-color: var(--kodio-dark);
  }

  .purple {
    background-color: var(--kodio-purple);
  }

  .orange {
    background-color: var(--kodio-orange);
  }
</style>
<script>
  const sections = [...document.querySelectorAll<HTMLDivElement>('section')];
  const header = document.querySelector<HTMLDivElement>('header');
  const yellowButton = document.querySelector<HTMLButtonElement>('button.yellow');
  const darkButton = document.querySelector<HTMLButtonElement>('button.dark');
  const purpleButton = document.querySelector<HTMLButtonElement>('button.purple');
  const orangeButton = document.querySelector<HTMLButtonElement>('button.orange');

  function setTheme(backgroundColor: string, color: string) {
    if (!header) return;

    header.style.backgroundColor = backgroundColor;
    header.style.color = color;

    sections.forEach((section) => {
      section.style.backgroundColor = backgroundColor;
      section.style.color = color;
    });
  }

  yellowButton?.addEventListener('click', () => {
    setTheme('var(--kodio-yellow)', '');
  });

  darkButton?.addEventListener('click', () => {
    setTheme('var(--kodio-dark)', 'var(--white)');
  });

  purpleButton?.addEventListener('click', () => {
    setTheme('var(--kodio-purple)', '');
  });

  orangeButton?.addEventListener('click', () => {
    setTheme('var(--kodio-orange)', '');
  });
</script>
